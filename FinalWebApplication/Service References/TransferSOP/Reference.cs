//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34011
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FinalWebApplication.TransferSOP {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TransferSOP.TransferSOPIService")]
    public interface TransferSOPIService {
        
        // CODEGEN: Generating message contract since the wrapper name (UploadSOPInfo) of message UploadSOPInfo does not match the default value (UploadFile)
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransferSOPIService/UploadFile", ReplyAction="http://tempuri.org/TransferSOPIService/UploadFileResponse")]
        FinalWebApplication.TransferSOP.ReturnURL UploadFile(FinalWebApplication.TransferSOP.UploadSOPInfo request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TransferSOPIService/UploadFile", ReplyAction="http://tempuri.org/TransferSOPIService/UploadFileResponse")]
        System.Threading.Tasks.Task<FinalWebApplication.TransferSOP.ReturnURL> UploadFileAsync(FinalWebApplication.TransferSOP.UploadSOPInfo request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadSOPInfo", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class UploadSOPInfo {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string fileName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.IO.Stream fileStream;
        
        public UploadSOPInfo() {
        }
        
        public UploadSOPInfo(string fileName, System.IO.Stream fileStream) {
            this.fileName = fileName;
            this.fileStream = fileStream;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ReturnURL", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class ReturnURL {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string strURL;
        
        public ReturnURL() {
        }
        
        public ReturnURL(string strURL) {
            this.strURL = strURL;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface TransferSOPIServiceChannel : FinalWebApplication.TransferSOP.TransferSOPIService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TransferSOPIServiceClient : System.ServiceModel.ClientBase<FinalWebApplication.TransferSOP.TransferSOPIService>, FinalWebApplication.TransferSOP.TransferSOPIService {
        
        public TransferSOPIServiceClient() {
        }
        
        public TransferSOPIServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TransferSOPIServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TransferSOPIServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TransferSOPIServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        FinalWebApplication.TransferSOP.ReturnURL FinalWebApplication.TransferSOP.TransferSOPIService.UploadFile(FinalWebApplication.TransferSOP.UploadSOPInfo request) {
            return base.Channel.UploadFile(request);
        }
        
        public string UploadFile(string fileName, System.IO.Stream fileStream) {
            FinalWebApplication.TransferSOP.UploadSOPInfo inValue = new FinalWebApplication.TransferSOP.UploadSOPInfo();
            inValue.fileName = fileName;
            inValue.fileStream = fileStream;
            FinalWebApplication.TransferSOP.ReturnURL retVal = ((FinalWebApplication.TransferSOP.TransferSOPIService)(this)).UploadFile(inValue);
            return retVal.strURL;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<FinalWebApplication.TransferSOP.ReturnURL> FinalWebApplication.TransferSOP.TransferSOPIService.UploadFileAsync(FinalWebApplication.TransferSOP.UploadSOPInfo request) {
            return base.Channel.UploadFileAsync(request);
        }
        
        public System.Threading.Tasks.Task<FinalWebApplication.TransferSOP.ReturnURL> UploadFileAsync(string fileName, System.IO.Stream fileStream) {
            FinalWebApplication.TransferSOP.UploadSOPInfo inValue = new FinalWebApplication.TransferSOP.UploadSOPInfo();
            inValue.fileName = fileName;
            inValue.fileStream = fileStream;
            return ((FinalWebApplication.TransferSOP.TransferSOPIService)(this)).UploadFileAsync(inValue);
        }
    }
}
